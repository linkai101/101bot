const Discord = require('discord.js');
const { stripIndents } = require('common-tags');
const Command = require('../base');

const path = require('path');
const { embedSettings } = require(path.join(__dirname, '..', '..', '..', '..', '..', 'config', 'config.json'));

module.exports = class ListGroupsCommand extends Command {
	constructor(client) {
		super(client, {
			name: 'groups',
			aliases: ['modules', 'list-groups', 'show-groups'],
			group: 'commands',
			memberName: 'groups',
			description: 'Lists all command groups.',
			details: 'Only administrators may use this command.',
			guarded: true
		});
	}

	hasPermission(msg) {
		if(!msg.guild) return this.client.isOwner(msg.author);
		//return this.client.isOwner(msg.author) || msg.author.hasPermission('ADMINISTRATOR');
		return true;
	}

	run(msg) {
		const moduleMessage = new Discord.MessageEmbed()
			.setColor(embedSettings.color)
			.setAuthor('Modules', '', '')
			.setThumbnail(`${(msg.guild) ? `https://cdn.discordapp.com/icons/${msg.guild.id}/${msg.guild.icon}.png` : ''}`)
			.setDescription(`${this.client.registry.groups.map(grp =>
				`**${grp.name}:** ${grp.isEnabledIn(msg.guild) ? ':white_check_mark:' : ':x:'}`
			).join('\n')}${(msg.guild) ? (msg.member.hasPermission('ADMINISTRATOR') || this.client.isOwner(msg.author)) ? '\n\nUse the commands \`enable\`\nand \`disable\` to toggle modules.' : '\n\nModules can be toggled by\nguild administrators.' : ''}`)
			.setFooter(embedSettings.footer, embedSettings.footer_url);
		return msg.channel.send(moduleMessage);

		/*return msg.reply(stripIndents`
			__**Groups**__
			${this.client.registry.groups.map(grp =>
				`**${grp.name}:** ${grp.isEnabledIn(msg.guild) ? 'Enabled' : 'Disabled'}`
			).join('\n')}
		`);*/
	}
};
